services:
  database:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    command: >
      bash -c "echo 'POSTGRES_USER=${POSTGRES_USER}';
               echo 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}';
               echo 'POSTGRES_DB=${POSTGRES_DB}';
               sleep 30;
               docker-entrypoint.sh postgres"

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.api
    container_name: attack_visualizer_api
    depends_on:
      - database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "8000:8000"
    restart: unless-stopped
    command: >
      bash -c "echo 'POSTGRES_USER=${POSTGRES_USER}';
               echo 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}';
               echo 'POSTGRES_DB=${POSTGRES_DB}';
               uvicorn api:app --host 0.0.0.0 --port 8000"

  frontend:
    build:
      context: ./frontend
    container_name: attack_visualizer_frontend
    ports:
      - "3000:80"
    restart: unless-stopped
    command: >
      bash -c "echo 'Starting frontend...'; nginx -g 'daemon off;'"

volumes:
  pgdata:
