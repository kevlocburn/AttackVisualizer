name: Deploy AttackVisualizer

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          log-public-key: true

      - name: Add Known Hosts
        run: ssh-keyscan -H ${{ secrets.DO_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        run: |
          ssh -T root@${{ secrets.DO_IP }} << 'EOF'
          if [ ! -d /home/AttackVisualizer ]; then
            git clone git@github.com:kevlocburn/AttackVisualizer.git /home/AttackVisualizer
          else
            cd /home/AttackVisualizer && git pull
          fi

          cd /home/AttackVisualizer

          export POSTGRES_USER=${POSTGRES_USER}
          export POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          export POSTGRES_DB=${POSTGRES_DB}

          # Ensure environment variables are passed
          POSTGRES_USER=${POSTGRES_USER} \
          POSTGRES_PASSWORD=${POSTGRES_PASSWORD} \
          POSTGRES_DB=${POSTGRES_DB} \
          docker-compose down

          POSTGRES_USER=${POSTGRES_USER} \
          POSTGRES_PASSWORD=${POSTGRES_PASSWORD} \
          POSTGRES_DB=${POSTGRES_DB} \
          docker-compose up -d --build

          # Configure Nginx
          cat <<EOL > /etc/nginx/conf.d/attackvisualizer.conf
          server {
              listen 80;
              server_name hack.kevinlockburner.com;

              return 301 https://\$host\$request_uri;
          }

          server {
              listen 443 ssl;
              server_name hack.kevinlockburner.com;

              ssl_certificate /etc/letsencrypt/live/hack.kevinlockburner.com/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/hack.kevinlockburner.com/privkey.pem;

              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_ciphers HIGH:!aNULL:!MD5;
              ssl_prefer_server_ciphers on;

              location /api/ {
                  proxy_pass http://localhost:8000/;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }

              location / {
                  proxy_pass http://localhost:3000/;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }
          }
          EOL

          nginx -t && systemctl reload nginx || (echo "Nginx reload failed"; exit 1)

          systemctl restart log_scraper.timer
          EOF
