name: Deploy AttackVisualizer

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          log-public-key: true

      - name: Add Known Hosts
        run: ssh-keyscan -H ${{ secrets.DO_IP }} >> ~/.ssh/known_hosts

      - name: Build and Deploy
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        run: |
          ssh root@${{ secrets.DO_IP }} << 'EOF'
          if [ ! -d /home/AttackVisualizer ]; then
            git clone git@github.com:kevlocburn/AttackVisualizer.git /home/AttackVisualizer
          else
            cd /home/AttackVisualizer && git pull
          fi

          cd /home/AttackVisualizer

          echo "POSTGRES_USER=${POSTGRES_USER}"
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
          echo "POSTGRES_DB=${POSTGRES_DB}"

          # Create an .env file dynamically (for debugging)
          echo "POSTGRES_USER=${POSTGRES_USER}" > .env
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
          echo "POSTGRES_DB=${POSTGRES_DB}" >> .env
          cat .env  # Verify the file content

          # Build and tag the Docker images locally
          docker-compose build

          # Stop and remove existing containers
          docker-compose down

          # Start the containers with the new images
          docker-compose up -d

          EOF

