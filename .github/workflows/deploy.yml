name: Deploy AttackVisualizer

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  ACTIONS_STEP_DEBUG: false
  REGISTRY: ghcr.io
  IMAGE_FRONTEND: ghcr.io/kevlocburn/attackvisualizer/attackvisualizer-frontend
  IMAGE_API: ghcr.io/kevlocburn/attackvisualizer/attackvisualizer-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Authenticate with GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build and Push Docker Images to GHCR
        run: |
          docker build -t $IMAGE_FRONTEND:latest -f ./frontend/Dockerfile ./frontend
          docker build -t $IMAGE_API:latest -f ./backend/Dockerfile.api ./backend
          
          docker push $IMAGE_FRONTEND:latest
          docker push $IMAGE_API:latest

      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          log-public-key: false 

      - name: Debug SSH Connectivity
        run: |
          echo "Testing SSH connection..."
          ssh -o StrictHostKeyChecking=no -v root@${{ secrets.DO_IP }} exit

      - name: Add Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.DO_IP }} >> ~/.ssh/known_hosts || echo "Warning: Unable to scan SSH host key"

      - name: Deploy Docker Images on Server
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        run: |
          ssh root@${{ secrets.DO_IP }} << 'EOF'
          cd /home/AttackVisualizer
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

          # Stop and remove old containers
          docker ps -q --filter "name=attack_visualizer_api" | grep -q . && docker stop attack_visualizer_api && docker rm attack_visualizer_api || true
          docker ps -q --filter "name=attack_visualizer_frontend" | grep -q . && docker stop attack_visualizer_frontend && docker rm attack_visualizer_frontend || true

          # Pull new images
          docker pull $IMAGE_FRONTEND:latest
          docker pull $IMAGE_API:latest

          # Remove old images if they exist
          docker image prune -f
          docker rmi $(docker images -q ghcr.io/kevlocburn/attackvisualizer/attackvisualizer-api) || true
          docker rmi $(docker images -q ghcr.io/kevlocburn/attackvisualizer/attackvisualizer-frontend) || true

          # Deploy updated containers with Docker Compose
          echo "::add-mask::${{ secrets.POSTGRES_USER }}"
          echo "::add-mask::${{ secrets.POSTGRES_PASSWORD }}"
          echo "::add-mask::${{ secrets.POSTGRES_DB }}"
          
          POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
          docker-compose pull && docker-compose up -d --force-recreate --no-cache

          # Restart Nginx
          systemctl reload nginx || (echo "Nginx reload failed"; exit 1)
          EOF
